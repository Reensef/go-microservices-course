syntax = "proto3";

package inventory.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/Reensef/go-microservices-course/shared/pkg/proto/inventory/v1;inventory_v1";

// Определение сервиса InventoryService
service InventoryService {
    // Метод для получения детали по UUID
    rpc GetPart(GetPartRequest) returns (GetPartResponse);

    // Метод для получения списка деталей с фильтрацией
    rpc ListParts(ListPartsRequest) returns (ListPartsResponse);
}

// Запрос для метода GetPart
message GetPartRequest {
    string uuid = 1; // Идентификатор детали
}

// Ответ для метода GetPart
message GetPartResponse {
    Part part = 1; // Информация о детали
}

// Запрос для метода ListParts
message ListPartsRequest {
    PartsFilter filter = 1; // Фильтр для поиска деталей
}

// Ответ для метода ListParts
message ListPartsResponse {
    repeated Part parts = 1; // Список найденных деталей
}

// Фильтр для метода ListParts
message PartsFilter {
    repeated string uuids = 1; // Список UUID'ов
    repeated string names = 2; // Список имён
    repeated Category categories = 3; // Список категорий
    repeated string manufacturer_countries = 4; // Список стран производителей
    repeated string tags = 5; // Список тегов
}

// Основная структура Part
message Part {
    string uuid = 1; // Уникальный идентификатор детали
    string name = 2; // Название детали
    string description = 3; // Описание детали
    double price = 4; // Цена за единицу
    int64 stock_quantity = 5; // Количество на складе
    Category category = 6; // Категория
    Dimensions dimensions = 7; // Размеры детали
    Manufacturer manufacturer = 8; // Информация о производителе
    repeated string tags = 9; // Теги для быстрого поиска
    map<string, Value> metadata = 10; // Гибкие метаданные
    google.protobuf.Timestamp created_at = 11; // Дата создания
    google.protobuf.Timestamp updated_at = 12; // Дата обновления
}

// Перечисление для категории детали
enum Category {
    CATEGORY_UNSPECIFIED = 0; // Неизвестная категория
    CATEGORY_ENGINE = 1; // Двигатель
    CATEGORY_FUEL = 2; // Топливо
    CATEGORY_PORTHOLE = 3; // Иллюминатор
    CATEGORY_WING = 4; // Крыло
}

// Структура для размеров детали
message Dimensions {
    double length = 1; // Длина в см
    double width = 2; // Ширина в см
    double height = 3; // Высота в см
    double weight = 4; // Вес в кг
}

// Структура для информации о производителе
message Manufacturer {
    string name = 1; // Название
    string country = 2; // Страна производства
    string website = 3; // Сайт производителя
}

// Определение типа Value для метаданных
message Value {
    oneof kind {
        string string_value = 1; // Строковое значение
        int64 int64_value = 2; // Целое значение
        double double_value = 3; // Дробное значение
        bool bool_value = 4; // Логическое значение
    }
}