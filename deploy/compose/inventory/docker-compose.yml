services: # Здесь описываются контейнеры, необходимые для inventory сервиса

  inventory-mongo:
    image: ${MONGO_IMAGE_NAME} # Образ MongoDB

    container_name: inventory-mongo
    # Устанавливаем удобное читаемое имя контейнера — пригодится для логов и отладки

    # environment: # Переменные окружения для инициализации MongoDB
    #   MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE} # Имя базы данных, которая будет создана при запуске
    #   MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME} # Имя root-пользователя MongoDB
    #   MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD} # Пароль для root-пользователя

    env_file:
      - .env

    volumes:
      - inventory_mango_data:/data/db
      # Подключаем локальный Docker-том к директории MongoDB, где хранятся все данные
      # Это нужно для сохранения данных между перезапусками контейнера

    ports:
      - "${MONGO_EXTERNAL_PORT}:27017"
      # Пробрасываем порт: внешний из .env, внутренний фиксированный
      # Это позволяет подключаться к Mongo из внешних инструментов

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "echo 'db.runCommand({ ping: 1 }).ok' | mongosh --quiet -u ${MONGO_INITDB_ROOT_USERNAME} -p i${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase ${MONGO_AUTH_DB}",
        ]
      # Проверка готовности MongoDB: выполняем команду ping через mongosh с указанием логина и пароля
      # --quiet отключает лишний вывод, чтобы результатом был только "1" при успехе
      interval: 10s # Запускаем проверку каждые 10 секунд
      timeout: 5s # Максимальное время ожидания выполнения ping-команды
      retries: 5 # После 5 неудачных проверок подряд контейнер считается "неработоспособным"

    restart: unless-stopped
    # Автоматически перезапускаем контейнер, если он аварийно завершился
    # Но если мы остановим его вручную — он не запустится повторно

    networks:
      - microservices-net
      # Подключаем контейнер к общей сети всех микросервисов, чтобы они могли взаимодействовать между собой по имени

volumes: # Раздел с томами — определяем хранилище, которое создаст Docker
  inventory_mango_data:
  # Именованный том, в котором будут храниться данные MongoDB
  # Он живёт отдельно от контейнера и сохраняется даже после удаления контейнера

networks: # Определение используемой сети
  microservices-net:
    external: true
    # Мы не создаём новую сеть, а подключаемся к внешней, общей для всех микросервисов
    # Её должен создать docker-compose.yml или вручную: docker network create microservices-net